-- ###Esquema do Trabalho###

CREATE TABLE FUNCIONARIO (
	CPF CHAR(14) NOT NULL, -- Identificador de cada funcionario
	NOME VARCHAR2(40) NOT NULL,
	DATANASCIMENTO DATE NOT NULL,
	TELEFONE VARCHAR2(11) NOT NULL,
	CARGO VARCHAR2(14),
	ANOSEXPERIENCIA NUMBER,
	RUA VARCHAR2(40),
	NUMERO VARCHAR2(40),
	BAIRRO VARCHAR2(40),
	CEP CHAR(9),
	CIDADE VARCHAR2(40),
	UF CHAR(2),
	CONSTRAINT PK_CANDIDATO PRIMARY KEY(CPF),
    CONSTRAINT CK_CPF_FUNC CHECK(REGEXP_LIKE(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}')),
	CONSTRAINT CK_TELEFONE CHECK(REGEXP_LIKE(TELEFONE, '^[0-9]{10,15}$')),
	CONSTRAINT CK_CARGO CHECK (UPPER(CARGO) IN ('ADMINISTRADOR', 'CIENTISTA', 'PILOTO', 'MINERADOR')),
	CONSTRAINT CK_CEP_FUNC CHECK(REGEXP_LIKE(CEP, '[0-9]{5}\-[0-9]{3}'))
);


CREATE TABLE TREINAMENTOS_FUNCIONARIO (
	FUNCIONARIO CHAR(14) NOT NULL,
	TREINAMENTO VARCHAR2(30) NOT NULL,
	CONSTRAINT PK_TREINAMENTOS_FUNCIONARIO PRIMARY KEY(FUNCIONARIO, TREINAMENTO),
	CONSTRAINT FK_TREINAMENTOS_FUNCIONARIO FOREIGN KEY(FUNCIONARIO) REFERENCES FUNCIONARIO(CPF) ON DELETE CASCADE
);

/*
	Tabela ADMINISTRADOR:
*/
CREATE TABLE ADMINISTRADOR (
 	CPF CHAR(14) NOT NULL,
	CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY(CPF),
	CONSTRAINT FK_ADMINISTRADOR FOREIGN KEY(CPF) REFERENCES FUNCIONARIO(CPF) ON DELETE CASCADE
);

/*
	Tabela CIENTISTA:
*/
CREATE TABLE CIENTISTA (
	CPF CHAR(14) NOT NULL,
	GRAU_ACADEMICO VARCHAR2(20),
	INSTITUTO_FORMACAO VARCHAR2(30),
	CONSTRAINT PK_CIENTISTA PRIMARY KEY(CPF),
	CONSTRAINT FK_CIENTISTA FOREIGN KEY(CPF)
    	REFERENCES FUNCIONARIO(CPF)
    	ON DELETE CASCADE
);

CREATE TABLE PUBLICACOES_CIENTISTA (
	CIENTISTA CHAR(14) NOT NULL,
	PUBLICACAO VARCHAR2(30) NOT NULL,
	CONSTRAINT PK_PUBLICACOES PRIMARY KEY(CIENTISTA, PUBLICACAO),
	CONSTRAINT FK_PUBLICACOES FOREIGN KEY(CIENTISTA)
    	REFERENCES CIENTISTA(CPF)
    	ON DELETE CASCADE  
);

/*
	Tabela PILOTO:
*/
CREATE TABLE PILOTO (
	CPF CHAR(14) NOT NULL,
	TIPO_LICENCA VARCHAR2(50),
	VALIDADE_LICENCA DATE NOT NULL,
	CONSTRAINT PK_PILOTO PRIMARY KEY(CPF),
	CONSTRAINT FK_PILOTO FOREIGN KEY(CPF)
    	REFERENCES FUNCIONARIO(CPF)
    	ON DELETE CASCADE
);

/*
	Tabela MINERADOR:
*/
CREATE TABLE MINERADOR (
	CPF CHAR(14) NOT NULL,
	CONSTRAINT PK_MINERADOR PRIMARY KEY(CPF),
	CONSTRAINT FK_MINERADOR FOREIGN KEY(CPF)
    	REFERENCES FUNCIONARIO(CPF)
    	ON DELETE CASCADE
);

CREATE TABLE CERTIFICACAO_MINERADOR (
	MINERADOR CHAR(14) NOT NULL,
	NOME_CERTIFICACAO VARCHAR2(20) NOT NULL,
	CONSTRAINT PK_CERTIFICACAO PRIMARY KEY(MINERADOR, NOME_CERTIFICACAO),
	CONSTRAINT FK_CERTIFICACAO FOREIGN KEY(MINERADOR)
    	REFERENCES MINERADOR(CPF)
    	ON DELETE CASCADE
);

CREATE TABLE FERRAMENTAS_DOMINADAS (
	MINERADOR CHAR(14) NOT NULL,
	FERRAMENTA VARCHAR2(20) NOT NULL,
	CONSTRAINT PK_FERRAMENTAS_DOMINADAS PRIMARY KEY(MINERADOR, FERRAMENTA),
	CONSTRAINT FK_FERRAMENTAS_DOMINADAS FOREIGN KEY(MINERADOR)
    	REFERENCES MINERADOR(CPF)
    	ON DELETE CASCADE    
);

CREATE TABLE FORNECEDOR (
	CNPJ CHAR(18) NOT NULL, -- Identificador de cada fornecedor
	NOME VARCHAR2(40) NOT NULL,
	RUA VARCHAR2(40),
	NUMERO VARCHAR2(40),
	BAIRRO VARCHAR2(40),
	CEP CHAR(9),
	CIDADE VARCHAR2(40),
	UF CHAR(2),
	CONSTRAINT PK_FORNECEDOR PRIMARY KEY(CNPJ),
	CONSTRAINT CK_CNPJ_FORNECEDOR CHECK(REGEXP_LIKE(CNPJ, '[0-9]{2}\.[0-9]{3}\.[0-9]{3}\/[0-9]{4}\-[0-9]{2}')),
	CONSTRAINT CK_CEP_FORNECEDOR CHECK(REGEXP_LIKE(CEP, '[0-9]{5}\-[0-9]{3}')) 
);

CREATE TABLE TIPO_FORNECEDOR (
    CNPJ CHAR(18) NOT NULL,
    TIPO VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_TIPO_FORNECEDOR PRIMARY KEY(CNPJ, TIPO),
    CONSTRAINT FK_TIPO_FORNECEDOR FOREIGN KEY(CNPJ) REFERENCES FORNECEDOR(CNPJ) ON DELETE CASCADE
);

/*
	Tabela PLANETA:
*/
CREATE TABLE PLANETA (
	DESIGNACAO_ASTRONOMICA VARCHAR2(50) NOT NULL,
	TIPO_CLIMATICO VARCHAR2(20),
	TEMPERATURA_MEDIA NUMBER(3), -- apenas graus Celsius
	PRESSAO_ATMOSFERICA NUMBER(3), -- atm
	DIAMETRO VARCHAR2(10), -- em km
	MASSA VARCHAR2(10), -- em kg, exemplo: ‘1,9×10^30’ kg
	DISTANCIA_TERRA VARCHAR2(10), -- em km
	TIPO_PLANETA VARCHAR2(20),
	EXISTENCIA_AGUA CHAR(1), -- boolean
	DURACAO_DIA NUMBER(5), -- em horas
	CONSTRAINT PK_PLANETA PRIMARY KEY(DESIGNACAO_ASTRONOMICA),
	CONSTRAINT CK_CLASSICO CHECK(UPPER(EXISTENCIA_AGUA) IN('S','N'))
);

CREATE TABLE PERIGOS_POTENCIAIS (
	PLANETA VARCHAR2(50) NOT NULL,
	PERIGO_POTENCIAL VARCHAR2(50) NOT NULL,
	CONSTRAINT PK_PERIGOS PRIMARY KEY(PLANETA, PERIGO_POTENCIAL),
	CONSTRAINT FK_PERIGO_PLANETA FOREIGN KEY(PLANETA) REFERENCES PLANETA(DESIGNACAO_ASTRONOMICA) ON DELETE CASCADE
);

CREATE TABLE NAVE(
    NUMERO_CHASSI CHAR(17) NOT NULL,
    MODELO VARCHAR2(15), --CONFIRMAR
    NUMERO_TRIPULANTES NUMBER(3) NOT NULL,
    VOLUME_MAX_CARGA NUMBER NOT NULL,
    ESTADO VARCHAR2(25) NOT NULL, --CONFIRMAR
    VELOCIDADE_MAXIMA NUMBER NOT NULL,
    CONSTRAINT PK_NAVE PRIMARY KEY(NUMERO_CHASSI)
);

CREATE TABLE MISSAO (
 	PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
	DATA_HORA_RETORNO DATE,
	PROPOSITO VARCHAR2(200) NOT NULL,
	NAVE CHAR(17) NOT NULL,
	PILOTO CHAR(14) NOT NULL,
    ADMINISTRADOR CHAR(14) NOT NULL,
    CONSTRAINT PK_MISSAO PRIMARY KEY(PLANETA, DATA_HORA_PARTIDA),
    CONSTRAINT FK_MISSAO_PLANETA FOREIGN KEY(PLANETA) REFERENCES PLANETA(DESIGNACAO_ASTRONOMICA) ON DELETE CASCADE,
    CONSTRAINT FK_MISSAO_NAVE FOREIGN KEY(NAVE) REFERENCES NAVE(NUMERO_CHASSI) ON DELETE CASCADE,
    CONSTRAINT FK_MISSAO_PILOTO FOREIGN KEY(PILOTO) REFERENCES PILOTO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_MISSAO_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(CPF) ON DELETE CASCADE
);

/*
	Tabela COLETA:    
*/
CREATE TABLE COLETA (
	PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
	VOLUME_TOTAL VARCHAR2(10), -- em m³
	CONSTRAINT PK_COLETA PRIMARY KEY(PLANETA, DATA_HORA_PARTIDA),
	CONSTRAINT FK_COLETA_PLANETA FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES MISSAO(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

CREATE TABLE CIENTISTA_REALIZA_COLETA(
    CIENTISTA CHAR(14) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
    CONSTRAINT PK_CIENTISTA_REALIZA_COLETA PRIMARY KEY(CIENTISTA, PLANETA, DATA_HORA_PARTIDA),
    CONSTRAINT FK_CIENTISTA_COLETA_CPF FOREIGN KEY(CIENTISTA) REFERENCES CIENTISTA(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_CIENTISA_COLETA_MISSAO FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES COLETA(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

/*
	Tabela MINERACAO:
*/
CREATE TABLE MINERACAO (
	PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
	TECNICA_UTILIZADA VARCHAR2(20),
	QUANTIDADE_EXTRAIDA VARCHAR2(10), -- em kg
	CONSTRAINT PK_MINERACAO PRIMARY KEY(PLANETA, DATA_HORA_PARTIDA),
	CONSTRAINT FK_MINERACAO_PLANETA FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES MISSAO(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

/*
	Tabela AMOSTRA NAO TESTADO:
*/
CREATE TABLE AMOSTRA(
    ID NUMBER GENERATED ALWAYS AS IDENTITY,
    PLANETA VARCHAR2(50) NOT NULL UNIQUE,
    DATA_HORA_PARTIDA DATE NOT NULL,
    DATA_HORA_COLETA DATE NOT NULL,
    ESTADO_PRESERVACAO VARCHAR2(20) NOT NULL, --CHECAR
    FONTE VARCHAR2(30), --CHECAR
    CONSTRAINT PK_AMOSTRA PRIMARY KEY(ID),
    CONSTRAINT FK_PLANETA_DATA FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES COLETA(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

CREATE TABLE OBSERVACOES(
    ID_AMOSTRA NUMBER NOT NULL,
    TEXTO VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_OBSERVACOES PRIMARY KEY(ID_AMOSTRA, TEXTO),
    CONSTRAINT FK_OBSERVACAO_AMOSTRA FOREIGN KEY(ID_AMOSTRA) REFERENCES AMOSTRA(ID) ON DELETE CASCADE
);

/*
	Tabela MATERIAL:
*/
CREATE TABLE MATERIAL(
    SIGLA VARCHAR2(4) NOT NULL,
    NOME VARCHAR2(25) NOT NULL,
    CATEGORIA VARCHAR2(25),
    PONTO_FUSAO DECIMAL(6,2),
    PONTO_EBULICAO DECIMAL(6,2),
    RESISTENCIA DOUBLE PRECISION,
    CONDUTIVIDADE_TERMICA DOUBLE PRECISION,
    CONDUTIVDADE_ELETRICA DOUBLE PRECISION,
    REATIVIDADE DOUBLE PRECISION,
    UTILIDADE VARCHAR2(7),
    CONSTRAINT PK_MATERIAL PRIMARY KEY(SIGLA)
);

CREATE TABLE MATERIAL_CONTEM_AMOSTRA (
    ID_AMOSTRA NUMBER NOT NULL,
    SIGLA_MATERIAL VARCHAR2(4) NOT NULL,
    CONSTRAINT PK_MATERIAL_CONTEM_AMOSTRA PRIMARY KEY(ID_AMOSTRA, SIGLA_MATERIAL),
    CONSTRAINT FK_AMOSTRA_MATERIAL FOREIGN KEY(ID_AMOSTRA) REFERENCES AMOSTRA(ID) ON DELETE CASCADE,
    CONSTRAINT FK_MATERIAL_AMOSTRA FOREIGN KEY(SIGLA_MATERIAL) REFERENCES MATERIAL(SIGLA) ON DELETE CASCADE
);

/*
	Tabela UTIL:
*/
CREATE TABLE MATERIAL_UTIL(
    SIGLA_MATERIAL VARCHAR2(4) NOT NULL,
    CONSTRAINT PK_UTIL PRIMARY KEY(SIGLA_MATERIAL),
    CONSTRAINT FK_SIGLA_MATERIAL FOREIGN KEY (SIGLA_MATERIAL) REFERENCES MATERIAL(SIGLA) ON DELETE CASCADE
);

CREATE TABLE MINERADOR_PARTICIPA_MINERACAO(
    MINERADOR CHAR(14) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
    CONSTRAINT PK_MINERADOR_PARTICIPA_MINERACAO PRIMARY KEY(MINERADOR, PLANETA, DATA_HORA_PARTIDA),
    CONSTRAINT FK_MINERADOR_PARTICIPACAO FOREIGN KEY(MINERADOR) REFERENCES MINERADOR(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_MINERADOR_MINERACAO FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES MINERACAO(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

CREATE TABLE UTIL_MINERACAO(
    SIGLA_MATERIAL VARCHAR2(4) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
    CONSTRAINT PK_UTIL_MINERACAO PRIMARY KEY(SIGLA_MATERIAL, PLANETA, DATA_HORA_PARTIDA),
    CONSTRAINT FK_SIGLA_UTIL_MINERACAO FOREIGN KEY(SIGLA_MATERIAL) REFERENCES MATERIAL_UTIL(SIGLA_MATERIAL) ON DELETE CASCADE,
    CONSTRAINT FK_UTIL_MINERACAO FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA) REFERENCES MINERACAO(PLANETA, DATA_HORA_PARTIDA) ON DELETE CASCADE
);

/*
	Tabela LABORATORIO:
*/
CREATE TABLE LABORATORIO(
   BLOCO NUMBER NOT NULL,
   SALA NUMBER NOT NULL,
   CONSTRAINT PK_LABORATORIO PRIMARY KEY(BLOCO, SALA)
);

/*
	Tabela ANALISE NAO TESTADO:
*/
CREATE TABLE ANALISE(
    CIENTISTA CHAR(14) NOT NULL,
    ID_AMOSTRA NUMBER NOT NULL,
    DATA_E_HORA DATE NOT NULL,
    BLOCO NUMBER NOT NULL,
    SALA NUMBER NOT NULL,
    CONSTRAINT PK_ANALISE PRIMARY KEY(CIENTISTA, ID_AMOSTRA, DATA_E_HORA),
    CONSTRAINT FK_CIENTISTA_ANALISE FOREIGN KEY(CIENTISTA) REFERENCES CIENTISTA(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_ID_AMOSTRA FOREIGN KEY(ID_AMOSTRA) REFERENCES AMOSTRA(ID) ON DELETE CASCADE,
    CONSTRAINT FK_BLOCO_SALA FOREIGN KEY(BLOCO, SALA) REFERENCES LABORATORIO(BLOCO, SALA)
);

/*
	Tabela VENDA:
*/
CREATE TABLE VENDA(
    ID_VENDA NUMBER GENERATED ALWAYS AS IDENTITY,
	ADMINISTRADOR CHAR(14) NOT NULL,
	FORNECEDOR CHAR(18) NOT NULL,
	DATA_HORA DATE NOT NULL,
    CONSTRAINT PK_VENDA PRIMARY KEY(ID_VENDA),
    CONSTRAINT SK_VENDA UNIQUE(ADMINISTRADOR, FORNECEDOR, DATA_HORA),
    CONSTRAINT FK1_VENDA FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(CPF) ON DELETE CASCADE,
    CONSTRAINT FK2_VENDA FOREIGN KEY(FORNECEDOR) REFERENCES FORNECEDOR(CNPJ) ON DELETE CASCADE
);

/*
	Tabela EQUIPAMENTO:
*/
CREATE TABLE EQUIPAMENTO(
	NUMERO_SERIE NUMBER(9) NOT NULL,
	MODELO VARCHAR2(10),
	NOME VARCHAR2(30) NOT NULL,
	ESTADO VARCHAR2(10) NOT NULL,
	TIPO VARCHAR2(30) NOT NULL,
	ENFOQUE VARCHAR2(20) NOT NULL,
	VENDA NUMBER,
	CONSTRAINT PK_EQUIPAMENTO PRIMARY KEY(NUMERO_SERIE),
	CONSTRAINT FK_EQUIPAMENTO FOREIGN KEY(VENDA)
		REFERENCES VENDA(ID_VENDA)
		ON DELETE CASCADE
);

/*
	Tabela INSTRUMENTO_DE_ANALISE:
*/
CREATE TABLE INSTRUMENTO_DE_ANALISE(
    NUMERO_SERIE NUMBER(9) NOT NULL,
    CONSTRAINT PK_INSTRUMENTO_ANALISE PRIMARY KEY(NUMERO_SERIE),
    CONSTRAINT FK_INSTRUMENTO_ANALISE FOREIGN KEY(NUMERO_SERIE)
		REFERENCES EQUIPAMENTO(NUMERO_SERIE)
		ON DELETE CASCADE
);

/*
	Tabela ANALISE_UTILIZA_INSTRUMENTO_ANALISE:
*/
CREATE TABLE ANALISE_UTILIZA_INSTRUMENTO_ANALISE(
	NUMERO_SERIE NUMBER(9) NOT NULL, 
    CIENTISTA CHAR(14) NOT NULL,
   	ID_AMOSTRA NUMBER NOT NULL,
    DATA_E_HORA DATE NOT NULL,
	CONSTRAINT PK_ANALISE_UTILIZA_INSTRUMENTO_ANALISE PRIMARY KEY(NUMERO_SERIE, ID_AMOSTRA, CIENTISTA, DATA_E_HORA),
    CONSTRAINT FK_NUMERO_SERIE_ANALISE FOREIGN KEY(NUMERO_SERIE) REFERENCES INSTRUMENTO_DE_ANALISE(NUMERO_SERIE) ON DELETE CASCADE,
    CONSTRAINT FK_ANALISE_UTILIZA_INSTRUMENTO_ANALISE FOREIGN KEY(ID_AMOSTRA, CIENTISTA, DATA_E_HORA)
		REFERENCES ANALISE(ID_AMOSTRA, CIENTISTA, DATA_E_HORA)
		ON DELETE CASCADE
);


/*
	Tabela FERRAMENTA_DE_MINERACAO:
*/
CREATE TABLE FERRAMENTA_DE_MINERACAO(
	NUMERO_SERIE NUMBER(9) NOT NULL,
	CONSTRAINT PK_FERRAMENTA_MINERACAO PRIMARY KEY(NUMERO_SERIE),
	CONSTRAINT FK_FERRAMENTA_MINERACAO FOREIGN KEY(NUMERO_SERIE)
		REFERENCES EQUIPAMENTO(NUMERO_SERIE)
		ON DELETE CASCADE
);

/*
	Tabela MINERACAO_UTILIZA_INSTRUMENTO_MINERACAO:
*/
CREATE TABLE MINERACAO_UTILIZA_INSTRUMENTO_MINERACAO(
	NUMERO_SERIE NUMBER(9) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
	CONSTRAINT PK_MINERACAO_UTILIZA_INSTRUMENTO_MINERACAO PRIMARY KEY(NUMERO_SERIE, PLANETA, DATA_HORA_PARTIDA),
    CONSTRAINT FK_NUMERO_SERIE_MINERACAO FOREIGN KEY(NUMERO_SERIE) REFERENCES FERRAMENTA_DE_MINERACAO(NUMERO_SERIE) ON DELETE CASCADE,
	CONSTRAINT FK_MINERACAO_UTILIZA_INSTRUMENTO_MINERACAO FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA)
		REFERENCES MINERACAO(PLANETA, DATA_HORA_PARTIDA)
		ON DELETE CASCADE
);

/*
	Tabela INSTRUMENTO_COLETA:
*/
CREATE TABLE INSTRUMENTO_COLETA(
	NUMERO_SERIE NUMBER(9) NOT NULL,
	CONSTRAINT PK_INSTRUMENTO_COLETA PRIMARY KEY(NUMERO_SERIE),
	CONSTRAINT FK_INSTRUMENTO_COLETA FOREIGN KEY(NUMERO_SERIE)
		REFERENCES EQUIPAMENTO(NUMERO_SERIE)
		ON DELETE CASCADE
);

/*
	Tabela COLETA_UTILIZA_INSTRUMENTO_COLETA:
*/
CREATE TABLE COLETA_UTILIZA_INSTRUMENTO_COLETA(
	NUMERO_SERIE NUMBER(9) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
	DATA_HORA_PARTIDA DATE NOT NULL,
	CONSTRAINT PK_COLETA_UTILIZA_INSTRUMENTO_COLETA PRIMARY KEY(NUMERO_SERIE, PLANETA, DATA_HORA_PARTIDA),
	CONSTRAINT FK_COLETA_UTILIZA_INSTRUMENTO_COLETA FOREIGN KEY(PLANETA, DATA_HORA_PARTIDA)
		REFERENCES COLETA(PLANETA, DATA_HORA_PARTIDA)
		ON DELETE CASCADE
);
